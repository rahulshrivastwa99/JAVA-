import java.util.Scanner;

class Stack {
    private int maxSize, top;
    private int[] stack;

    public Stack(int size) {
        maxSize = size;
        stack = new int[maxSize];
        top = -1;
    }

    public boolean isEmpty() {
        return top == -1;
    }

    public boolean isFull() {
        return top == maxSize - 1;
    }

    public void push(int value) {
        if (isFull()) System.out.println("Stack Overflow");
        else stack[++top] = value;
    }

    public int pop() {
        return isEmpty() ? -1 : stack[top--];
    }

    public int peek() {
        return isEmpty() ? -1 : stack[top];
    }

    public void display() {
        if (isEmpty()) System.out.println("Stack is empty");
        else {
            for (int i = 0; i <= top; i++) {
                System.out.print(stack[i] + " ");
            }
            System.out.println();
        }
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
           System.out.println("RAHUL SHRIVASTWA 193_CSE_B");
        System.out.print("Enter the size of the stack: ");
        int size = scanner.nextInt();
        Stack stack = new Stack(size);

        while (true) {
            System.out.println("\n1. Push  2. Pop  3. Peek  4. Display  5. Exit");
            int choice = scanner.nextInt();
            switch (choice) {
                case 1:
                    System.out.print("Enter value: ");
                    stack.push(scanner.nextInt());
                    break;
                case 2:
                    int popped = stack.pop();
                    if (popped != -1) System.out.println("Popped: " + popped);
                    else System.out.println("Stack Underflow");
                    break;
                case 3:
                    System.out.println("Top element: " + stack.peek());
                    break;
                case 4:
                    stack.display();
                    break;
                case 5:
                    scanner.close();
                    return;
                default:
                    System.out.println("Invalid choice");
            }
        }
    }
}
